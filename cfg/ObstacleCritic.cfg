#!/usr/bin/env python
# MPPI Controller configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t
PACKAGE = "mppi_controller"

gen = ParameterGenerator()

gen.add("consider_footprint", bool_t, 0, "Whether to use point cost (if robot is circular or low compute power) or compute SE2 footprint cost", False)
gen.add("repulsion_weight", double_t, 0, "Weight to apply to critic for generally preferring routes in lower cost space", 1.5, 0.0, 100.0)
gen.add("collision_cost", double_t, 0, "Cost to apply to a true collision in a trajectory", 10000.0, 0.0, 100000.0)
gen.add("collision_margin_distance", double_t, 0, "Margin distance from collision to apply severe penalty, similar to footprint inflation",  0.1, 0.0, 1.0)
gen.add("near_goal_distance", double_t, 0, "Distance near goal to stop applying preferential obstacle term to allow robot to smoothly converge to goal pose in close proximity to obstacles",  0.5, 0.0, 10.0)
exit(gen.generate(PACKAGE, "mppi_controller", "ObstacleCritic"))
